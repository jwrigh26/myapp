@property --glow-position {
  syntax: '<percentage>';
  inherits: true;
  initial-value: 0%;
}

/* Light mode colors (default) */
:root {
  --clr-1: #5567c8; /* primary.main */
  --clr-2: #7f8df1; /* primary.light */
  --clr-3: #b8c3f7; /* primary.superLight */
  --clr-4: #7f8df1; /* primary.light */
  --clr-5: #5567c8; /* primary.main */
  --surface-color: white;
  --glow-intensity: 0.25;
  --glow-size: 2px;
  --glow-height: 0px;
  --border-width: 8px;
}

/* Dark mode colors */
[data-theme='dark'] {
  --clr-1: #6c8ae4; /* primary.main dark */
  --clr-2: #95b1ff; /* primary.light dark */
  --clr-3: #c5d3ff; /* primary.superLight dark */
  --clr-4: #95b1ff; /* primary.light dark */
  --clr-5: #6c8ae4; /* primary.main dark */
  --surface-color: #23272e;
  --glow-intensity: 0.5;
  --glow-size: 2px;
  --glow-height: 0px;
  --border-width: 8px;
}

.glowing-border {
  --surface: var(--surface-color); /* Use the theme-aware surface color */
  --gradient-glow:
    var(--clr-1), var(--clr-2), var(--clr-3), var(--clr-4), var(--clr-5),
    var(--clr-1);
  --linear-gradient-glow: linear-gradient(
    90deg,
    var(--clr-4) calc(var(--glow-position) - 20%),
    var(--clr-1) calc(var(--glow-position) - 10%),
    var(--clr-2) var(--glow-position),
    var(--clr-3) calc(var(--glow-position) + 10%),
    var(--clr-1) calc(var(--glow-position) + 20%),
    var(--clr-4) calc(var(--glow-position) + 30%)
  );

  margin-bottom: var(--glow-height);

  border-top: var(--border-width, 3px) solid transparent;
  background:
    linear-gradient(canvas 0 0) padding-box,
    var(--linear-gradient-glow) border-box;

  position: relative;
  isolation: isolate;

  animation: glow 10s infinite linear;
}

@keyframes glow {
  0% {
    --glow-position: -30%;
  }
  100% {
    --glow-position: 130%;
  }
}

.glowing-border::before,
.glowing-border::after {
  content: '';
  position: absolute;
  border-radius: inherit;
}

.glowing-border::before {
  z-index: -1;
  background: canvas;
  inset-block-end: 0px;
  left: 0;
  right: 0;
  top: 0;
  /* filter: blur(var(--glow-size, 2px)); */
}

.glowing-border::after {
  z-index: -2;
  /* Only inset the bottom (block end) */
  inset-block-end: calc(-1 * var(--glow-height));
  left: 0;
  right: 0;
  top: 0;
  background: var(--linear-gradient-glow);
  filter: blur(var(--glow-size, 2px));
  opacity: var(--glow-intensity, 0.5);
}
